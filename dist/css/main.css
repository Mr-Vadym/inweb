@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/
   v5.0.1 | 20191019
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
main,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/* HTML5 hidden-attribute fix for newer browsers */
*[hidden] {
  display: none;
}

body {
  line-height: 1;
}

menu,
ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

a,
a:hover {
  text-decoration: none;
  color: #fff;
}

button {
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
}

.descr-media__text, .read__item-btn, .read__text, .articles__category, .categories__link, .date, .title-kit__descr, body {
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-style: normal;
}

.choise__title, .media__choise, .footer__title {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

.read-social__text, .article__read-text, .search__type, .header__sub-link, .header__go-to, .header__offer-news, .more-btn, .top-btn, h4, h3 {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
}

.read-social__text, .article__read-text, .search__type, .header__sub-link, .header__go-to, .header__offer-news, .more-btn, .top-btn, h4, h3 {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
}

.footer__link {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 200;
  font-style: normal;
}

.choise__title, .media__choise, .footer__title {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

h1,
h2 {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 700;
  font-style: normal;
}

html,
body {
  height: 100%;
}

.no-scroll {
  overflow: hidden;
}

.padding {
  padding-right: 17px;
}

body {
  font-size: 16px;
  color: #1e1e1e;
  display: flex;
  flex-direction: column;
  letter-spacing: 0;
  text-align: left;
}

.main {
  flex-grow: 1;
}

.container {
  max-width: 1154px;
  margin: 0 auto;
  padding: 0 35px;
}

a {
  font-size: 16px;
}

.title {
  display: inline-block;
}

.title-kit__separator {
  margin: 0 25px;
  width: 0;
  height: 42px;
  border: 1px solid #005640;
  display: inline-block;
}
.title-kit__descr {
  display: inline-block;
  line-height: 140%;
  text-align: left;
  font-size: 20px;
}

.date {
  color: #404040;
  font-size: 15px;
  line-height: 18px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #1e1e1e;
}

h1,
h2 {
  font-size: 53px;
  line-height: 65px;
}

h3 {
  font-size: 25px;
  line-height: 30px;
}

h4 {
  color: #1e1e1e;
  font-size: 18px;
  line-height: 22px;
  letter-spacing: 0%;
  text-align: left;
}

h5 {
  font-size: 1.3rem;
  font-weight: bold;
  margin-bottom: 0.3rem;
}

h6 {
  font-size: 1.1rem;
  font-weight: bold;
  margin-bottom: 0.2rem;
}

a {
  text-decoration: none;
  transition: color 0.3s ease;
}

button {
  cursor: pointer;
}

@media (hover: hover) {
  .header__sub-link:hover {
    cursor: pointer;
    color: #005640;
  }
  .header__sub-link:hover path {
    stroke: #005640;
  }
  .top-btn:hover {
    background: #005640;
    color: #fff;
  }
  .categories__link {
    transition: 0.3s;
  }
  .categories__link:hover {
    background: #005640;
    color: #fff;
  }
  .more-news__item:hover {
    transition: 0.3s;
    border-color: #005640;
  }
  .more-news__item:hover .more-news__title {
    transition: 0.3s;
    color: #005640;
  }
  .articles__item:hover {
    transition: 0.3s;
    background: #005640;
  }
  .articles__item:hover .articles__title {
    color: #fff;
  }
  .articles__item:hover .articles__body-date {
    color: #fff;
  }
  .articles__title:hover {
    text-decoration: underline;
    color: #fff;
  }
  .more-btn:hover {
    color: #005640;
  }
  .more-btn:hover path {
    fill: #005640;
  }
  .read__item-btn:hover {
    transition: 0.3s;
    background: #005640;
    color: #fff;
    border-color: #005640;
  }
  .footer a:hover {
    color: #fff;
  }
  .footer__item:hover path {
    transition: 0.3s;
    stroke: #005640;
  }
}
.top-btn {
  padding: 0 30px;
  border-radius: 18px;
  height: 36px;
  line-height: 36px;
  background: #fff;
  color: rgb(0, 0, 0);
  transition: 0.3s;
}

.categories {
  margin-top: 20px;
  display: flex;
  justify-content: space-between;
  gap: 13px;
  flex-wrap: wrap;
  align-content: normal;
}
.categories__link {
  padding: 0 40px;
  height: 42px;
  border: 1px solid #d2d2d2;
  border-radius: 31px;
  background: rgb(255, 255, 255);
  display: flex;
  justify-content: center;
  align-items: center;
  color: #545454;
  line-height: 19px;
}

.more-news__item {
  border-color: transparent;
  transition: 0.3s;
  /* Плавна зміна границі при наведенні та забиранні курсору */
}

.more-btn {
  color: #1e1e1e;
  margin-top: 31px;
  padding-right: 44px;
  font-size: 17px;
  line-height: 21px;
  display: block;
  text-align: right;
  position: relative;
}
.more-btn svg:first-child {
  display: block;
}
.more-btn svg:last-child {
  display: none;
}
.more-btn path {
  transition: 0.3s;
}
.more-btn svg {
  position: absolute;
  right: 0;
  bottom: 1px;
}

.articles__item {
  transition: 0.3s;
}

.read__item-btn {
  transition: 0.3s;
}

.footer path {
  transition: 0.3s;
}

.header {
  padding-top: 37px;
  min-height: 178px;
  background-color: #1E1E1E;
  box-shadow: 0px 7px 15px 0px rgba(175, 175, 175, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.header__top {
  padding: 0 37px;
  position: relative;
}
.header__nav {
  max-width: 1277px;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 33px;
  position: relative;
}
.header__go-to, .header__offer-news {
  padding: 0 30px;
  border-radius: 18px;
  height: 36px;
  line-height: 36px;
  background: #fff;
  color: rgb(0, 0, 0);
}
.header .logo {
  margin: 0 auto;
}
.header__sub {
  margin-top: 35px;
  position: relative;
}
.header__sub-items {
  margin: 0 auto;
  padding: 0 37px;
  max-width: 1147px;
  display: flex;
  justify-content: space-between;
}
.header__sub-link {
  padding: 5px 21px 41px;
  color: #fff;
  font-size: 20px;
  position: relative;
  display: inline-block;
  transition: all 0.3s;
}
.header__sub-link path {
  transition: all 0.3s;
}
.header__sub-item:nth-child(2) > span, .header__sub-item:nth-child(3) > span, .header__sub-item:nth-child(4) > span, .header__sub-item:nth-child(6) > span {
  padding-right: 48px;
}
.header__sub-item:nth-child(2) > span svg, .header__sub-item:nth-child(3) > span svg, .header__sub-item:nth-child(4) > span svg, .header__sub-item:nth-child(6) > span svg {
  position: absolute;
  right: 19px;
  top: 11px;
}

.search {
  opacity: 0;
  visibility: hidden;
  transition: 0.3s;
  padding: 20px 35px;
  z-index: 1;
  position: absolute;
  background: #363636;
  right: 0;
  bottom: 0;
  left: 0;
}
.search.active {
  opacity: 1;
  visibility: visible;
}
.search__form {
  margin: 0 auto;
  max-width: 1277px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 55px;
}
.search__type {
  width: -webkit-fill-available;
  width: -moz-available;
  width: stretch;
  display: block;
  box-sizing: border-box;
  background: transparent;
  border: none;
  color: rgba(243, 243, 243, 0.5019607843);
  font-size: 25px;
  line-height: 30px;
  outline: transparent;
}

.sidebar {
  opacity: 0;
  visibility: hidden;
  position: fixed;
  left: 0;
  right: 0;
  height: 100vh;
  z-index: 2;
  transition: 0.3s;
}
.sidebar.active {
  opacity: 1;
  visibility: visible;
}
.sidebar.active .sidebar__inner {
  left: 0;
}
.sidebar .overlay {
  width: 100%;
  height: 100%;
  background: rgba(30, 30, 30, 0.5019607843);
  position: fixed;
  z-index: -1;
}
.sidebar__inner {
  width: 350px;
  min-height: 100%;
  background: #fff;
  left: -350px;
  transition: all 0.3s;
  position: fixed;
}
.sidebar__top-link {
  color: #000;
}
.sidebar__header {
  width: 100%;
  height: 178px;
  box-shadow: 0px 7px 15px 0px rgba(0, 0, 0, 0.25);
  background: #1e1e1e;
}

.articles {
  display: flex;
  flex-wrap: wrap;
  gap: 35px 31px;
  justify-content: center;
}
.articles__item {
  max-width: 336px;
  box-shadow: 0px 0px 15.81px 0px rgba(0, 0, 0, 0.1490196078);
  background: #ffffff;
  transition: 0.3s;
}
.articles__item h4 {
  transition: 0.3s;
}
.articles__img {
  padding: 20px 25px;
  min-height: 163px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}
.articles__category {
  padding: 6px 15px;
  display: inline-block;
  font-size: 13px;
  border-radius: 30px;
  color: #545454;
  background: rgb(255, 255, 255);
  transition: 0.3s;
}
.articles__category:hover {
  color: #fff;
  background: #005640;
}
.articles__category + .articles__category {
  margin-left: 10px;
}
.articles__body {
  padding: 20px 25px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 207px;
}
.articles__body-date {
  text-align: right;
}

.footer__info {
  padding: 65px 0 60px 0;
  background: #363636;
}
.footer__columns {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 25px;
}
.footer__column:nth-child(1) {
  max-width: 190px;
}
.footer__column:nth-child(2) {
  max-width: 252px;
}
.footer__column:nth-child(3) {
  max-width: 321px;
}
.footer__column:nth-child(4) {
  max-width: 162px;
  padding-right: 21px;
}
.footer__title {
  color: #fff;
  font-size: 13.7px;
  line-height: 17px;
}
.footer__menu {
  padding-top: 25px;
}
.footer__item {
  padding: 5px 0 5px 18px;
  position: relative;
}
.footer__item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 9px;
  height: 50%;
  border-bottom: 1px solid #D2D2D2;
  border-left: 1px solid #D2D2D2;
}
.footer__item:nth-child(1):before {
  top: 5px;
  height: 40%;
}
.footer__item:not(:last-child)::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 60%;
  border-left: 1px solid #D2D2D2;
}
.footer__link {
  font-size: 14px;
  line-height: 17px;
  color: #fff;
}
.footer__item--social::before {
  display: none;
}
.footer__item--social::after {
  display: none;
}
.footer__link--desktop {
  display: inline;
}
.footer__link--mobile {
  display: none;
}
.footer__link--social {
  position: relative;
  padding-left: 11px;
}
.footer__icon {
  position: absolute;
  left: -8px;
  bottom: 0;
  transform: translate(-50%, 0);
}
.footer__copy {
  background: #1E1E1E;
  padding: 17px 0 25px;
}
.footer__copy-text {
  color: #CFCFCF;
  font-family: Montserrat, sans-serif;
  font-weight: 275;
  font-style: normal;
  font-size: 14px;
  line-height: 27px;
}

.media {
  padding: 75px 0 55px;
}
.media__articles {
  margin-top: 17px;
}
.media .articles__item:nth-child(1) {
  max-width: 715px;
}
.media .articles__item:nth-child(1) .articles__img {
  min-height: 261px;
}
.media .articles__item:nth-child(1) .articles__body {
  min-height: 109px;
}
.media__choise {
  margin-top: 50px;
  font-size: 17px;
  line-height: 21px;
}

.choise__title {
  color: rgb(30, 30, 30);
  line-height: 21px;
}
.choise__articles {
  margin-top: 17px;
}
.choise__articles > :first-child {
  max-width: 715px;
}
.choise.articles__items > :first-child .articles__img {
  min-height: 261px;
}
.choise.articles__items > :first-child .articles__body {
  min-height: 109px;
}

.more-news {
  padding: 56px 0;
  background: rgb(240, 240, 240);
}
.more-news__items {
  display: flex;
  justify-content: space-between;
  gap: 20px;
}
.more-news__item {
  max-width: 229px;
  padding: 2px 0 2px 24px;
  border-left: 2px solid #1e1e1e;
}
.more-news__title {
  margin-top: 10px;
}

.article {
  padding: 59px 0 55px;
}
.article__read-social {
  margin-top: 60px;
  background: #005640;
  padding: 19px;
  display: flex;
  justify-content: center;
  gap: 0 20px;
  align-items: center;
}
.article__read-text {
  color: rgb(255, 255, 255);
  font-size: 25px;
  line-height: 30px;
}
.article__read-items {
  display: flex;
  justify-content: center;
  gap: 0 10px;
}

.read-social {
  max-width: 1084px;
  margin-top: 60px;
  margin-left: auto;
  margin-right: auto;
  background: #005640;
  padding: 19px;
  display: flex;
  justify-content: center;
  gap: 0 20px;
  align-items: center;
}
.read-social__text {
  color: rgb(255, 255, 255);
  font-size: 25px;
  line-height: 30px;
}
.read-social__items {
  display: flex;
  justify-content: center;
  gap: 0 10px;
}

.cases {
  padding: 55px 0 70px;
  background: #f0f0f0;
}
.cases .articles {
  margin-top: 21px;
}

.by-direction {
  padding: 55px 0 55px;
}
.by-direction .articles {
  margin-top: 30px;
}

.read {
  padding: 90px 0 134px;
  background: rgb(242, 242, 241);
}
.read__inner {
  position: relative;
}
.read__window {
  max-width: 806px;
  min-height: 480px;
  padding: 51px 68px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-start;
}
.read__slash {
  width: 75px;
  height: 54px;
}
.read__title {
  margin-top: 15px;
  color: #ffffff;
}
.read__item {
  padding: 45px 37px;
  max-width: 389px;
  min-height: 446px;
  right: 0;
  bottom: -34px;
  position: absolute;
  box-shadow: 0px 0px 15.81px 0px rgba(0, 0, 0, 0.2509803922);
  background: rgb(255, 255, 255);
}
.read__text {
  margin-top: 13px;
  color: rgb(0, 0, 0);
  font-size: 18px;
  line-height: 140%;
}
.read__item-btn {
  margin: 30px 0;
  padding: 10px 30px;
  color: #545454;
  line-height: 19px;
  border: 1px solid #d2d2d2;
  border-radius: 31px;
  background: #ffffff;
  display: inline-block;
}

.descr-media {
  padding: 79px 0 81px;
}
.descr-media__text {
  color: #000000;
  font-size: 16px;
  line-height: 19px;
}

@media screen and (max-width: 1200px) {
  .header {
    padding: 21px 35px 24px;
    box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.25);
  }
  .header__top {
    margin: 0;
  }
  .header .burger {
    width: 30px;
    height: 17px;
  }
  .header .logo__img {
    width: 100px;
  }
  .header .search {
    width: 23px;
    height: 23px;
  }
  .header .top-btn, .header__categories {
    display: none;
  }
  .footer__info {
    padding: 20px 0 31px;
  }
  .footer__columns {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px 15px;
  }
  .footer__column:nth-child(2) {
    grid-column: 1/2;
    grid-row: 2/3;
  }
  .footer__column:nth-child(3) {
    grid-column: 2/3;
    grid-row: 1/3;
  }
  .footer__column:nth-child(4) {
    grid-column: 1/-1;
    padding-right: 0;
    max-width: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;
  }
  .footer__link--desktop {
    display: none;
  }
  .footer__link--mobile {
    display: inline;
  }
  .footer__menu--social {
    margin-top: 5px;
    min-width: 70px;
    display: flex;
    justify-content: space-between;
  }
  .footer__item--social {
    padding: 0;
  }
  .footer__link--social {
    position: static;
    padding: 0;
  }
  .footer__icon {
    position: static;
  }
  .footer__link--social span {
    display: none;
  }
  .footer__menu {
    padding-top: 0;
  }
  .footer__copy {
    padding: 19px 0;
  }
  .footer__copy-text {
    font-size: 10px;
    line-height: 12px;
  }
  .media {
    padding: 39px 0 20px;
  }
  .media__choise {
    margin-top: 16px;
  }
  .media__articles {
    margin-top: 5px;
  }
  .media .articles__item:nth-child(1) {
    display: none;
  }
  .title-kit {
    display: flex;
    flex-direction: column;
  }
  .title-kit h1 {
    font-size: 26px;
    line-height: 32px;
  }
  .title-kit__separator {
    margin: 10px 0 0;
    order: 1;
    width: 100%;
    height: 0;
  }
  .title-kit__descr {
    margin-top: 5px;
    font-size: 16px;
  }
  .categories {
    display: none;
  }
  .articles {
    flex-direction: column;
    gap: 20px 15px;
    font-weight: 600;
  }
  .articles__item {
    max-width: 100%;
  }
  .articles__img {
    min-height: 160px;
  }
  .articles__body {
    min-height: 136px;
    padding: 15px 20px;
  }
  .date {
    font-size: 12px;
    line-height: 14px;
  }
  .more-btn {
    margin-top: 20px;
    padding-right: 36px;
    font-size: 14px;
    line-height: 17px;
  }
  .more-btn svg:first-child {
    display: none;
  }
  .more-btn svg:last-child {
    display: block;
  }
  .more-btn svg {
    bottom: 4px;
  }
  .article {
    padding: 20px 0;
  }
  .article .articles__item:nth-child(n+4) {
    display: none;
  }
  .read-social {
    max-width: 100%;
    gap: 8px;
    align-items: flex-start;
  }
  .read-social__text {
    font-size: 20px;
    line-height: 24px;
  }
  .read-social__icon {
    width: 25px;
    height: 25px;
  }
  .cases {
    padding: 20px 0;
  }
  .cases .articles {
    margin-top: 15px;
  }
  h2 {
    font-size: 24px;
    line-height: 29px;
  }
  .by-direction,
  .descr-media,
  .read {
    display: none;
  }
  .more-news__items {
    flex-direction: column;
  }
  .more-news__item {
    transition: all 0.3s ease;
    max-width: 100%;
    /* Плавна зміна границі при наведенні та забиранні курсору */
  }
  .more-news__item:hover {
    border-color: #005640;
  }
  .more-news__item:hover .more-news__title {
    color: #005640;
  }
  .more-news__item .more-news__title {
    transition: color 0.3s ease;
    /* Плавна зміна кольору тексту при наведенні та забиранні курсору */
  }
  .more-news__item:last-child {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
