@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/
   v5.0.1 | 20191019
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
main, menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, main, menu, nav, section {
  display: block;
}

/* HTML5 hidden-attribute fix for newer browsers */
*[hidden] {
  display: none;
}

body {
  line-height: 1;
}

menu, ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

a,
a:hover {
  text-decoration: none;
  color: #000000;
}

button {
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
  font-size: 0;
}

input {
  padding: 0;
}

.date, .title-inner__descr, .breadcrumbs__link, .breadcrumbs__item + .breadcrumbs__item::before, .articles__category, .sidebar__center-link, .sidebar__button, .categories__link, body {
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-style: normal;
}

.footer__link {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 200;
  font-style: normal;
}

.footer__title, .sidebar__sub-link, .header__hover-link {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

.pagination__link, .sidebar__top-link, .search__type, .header__sub-link, .more-btn, .top-btn, h4, h3 {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
}

.articles .articles__title, h1,
h2 {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 700;
  font-style: normal;
}

html,
body {
  height: 100%;
}

body {
  color: #000000;
  font-size: 16px;
  line-height: 140%;
  letter-spacing: 0%;
  text-align: left;
  letter-spacing: 0;
}

.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

.main {
  flex-grow: 1;
}

.container {
  max-width: 1154px;
  margin: 0 auto;
  padding: 0 35px;
}

a {
  font-size: 16px;
}

.title {
  display: inline-block;
}

.slick-track {
  padding-bottom: 10px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #1e1e1e;
}

h1,
h2 {
  font-size: 53px;
  line-height: 65px;
}

h3 {
  font-size: 25px;
  line-height: 30px;
}

h4 {
  color: #1e1e1e;
  font-size: 18px;
  line-height: 22px;
  letter-spacing: 0%;
  text-align: left;
}

h5 {
  font-size: 1.3rem;
  font-weight: bold;
  margin-bottom: 0.3rem;
}

h6 {
  font-size: 1.1rem;
  font-weight: bold;
  margin-bottom: 0.2rem;
}

a {
  text-decoration: none;
  transition: color 0.3s ease;
}

button {
  cursor: pointer;
}

@media (hover: hover) {
  .sidebar__top-link:hover, .sidebar__sub-link:hover {
    color: #005640;
  }
  .header__sub-link:hover, .header__hover-link:hover {
    cursor: pointer;
    color: #005640;
  }
  .header__sub-link:hover path, .header__hover-link:hover path {
    stroke: #005640;
  }
  .header__hover-link {
    color: #005640;
  }
  .top-btn:hover {
    background: #005640;
    color: #fff;
    border: 1px solid transparent;
  }
  .categories__link {
    transition: 0.3s;
  }
  .categories__link:hover {
    background: #005640;
    color: #fff;
  }
  .more-news__item:hover {
    transition: 0.3s;
    border-color: #005640;
  }
  .more-news__item:hover .more-news__title {
    transition: 0.3s;
    color: #005640;
  }
  .articles__item:hover {
    transition: 0.3s;
    background: #005640;
  }
  .articles__item:hover .articles__title {
    color: #fff;
  }
  .articles__item:hover .articles__body-date {
    color: #fff;
  }
  .articles__title:hover {
    text-decoration: underline;
    color: #fff;
  }
  .more-btn:hover {
    color: #005640;
  }
  .more-btn:hover path {
    fill: #005640;
  }
  .read__item-btn:hover {
    transition: 0.3s;
    background: #005640;
    color: #fff;
    border-color: #005640;
  }
  .footer a:hover {
    color: #fff;
  }
  .footer__item:hover path {
    transition: 0.3s;
    stroke: #005640;
  }
}
.top-btn {
  padding: 0 30px;
  border-radius: 18px;
  height: 36px;
  line-height: 36px;
  background: #fff;
  color: rgb(0, 0, 0);
  transition: 0.3s;
  border: 1px solid #1e1e1e;
}

.categories {
  margin-top: 10px;
  display: flex;
  justify-content: space-between;
  gap: 5px;
  flex-wrap: wrap;
  align-content: normal;
}
.categories__link {
  padding: 0 40px;
  height: 42px;
  border: 1px solid #d2d2d2;
  border-radius: 31px;
  background: rgb(255, 255, 255);
  display: flex;
  justify-content: center;
  align-items: center;
  color: #545454;
  line-height: 19px;
}

.categories + .categories {
  margin-top: 15px;
}

.more-news__item {
  border-color: transparent;
  transition: 0.3s;
  /* Плавна зміна границі при наведенні та забиранні курсору */
}

.more-btn {
  color: #1e1e1e;
  margin-top: 31px;
  padding-right: 44px;
  font-size: 17px;
  line-height: 21px;
  display: block;
  text-align: right;
  position: relative;
}
.more-btn svg:first-child {
  display: block;
}
.more-btn svg:last-child {
  display: none;
}
.more-btn path {
  transition: 0.3s;
}
.more-btn svg {
  position: absolute;
  right: 0;
  bottom: 1px;
}

.articles__item {
  transition: 0.3s;
}
.read__item-btn {
  transition: 0.3s;
}

.footer path {
  transition: 0.3s;
}

.burger-btn {
  position: relative;
  width: 40px;
  height: 22px;
}
.burger-btn::before, .burger-btn::after {
  content: "";
}
.burger-btn::before {
  top: 0;
}
.burger-btn::after {
  bottom: 0;
}
.burger-btn span {
  top: 50%;
  transform: translate(0, -50%);
}
.burger-btn::before,
.burger-btn span, .burger-btn::after {
  position: absolute;
  left: 0;
  right: 0;
  height: 2px;
  background: #fff;
  transition: 0.3s;
}

.sidebar__buttons {
  padding: 30px 30px 25px;
  display: flex;
  justify-content: space-between;
  gap: 10px;
}
.sidebar__button {
  padding: 6px 15px 5px;
  color: #000000;
  font-size: 16px;
  line-height: 19px;
  border: 0.85px solid #d2d2d2;
  border-radius: 16px;
  background: rgb(255, 255, 255);
}
.sidebar__btn-separator {
  display: none;
}

.social__link path {
  transition: 0.3s;
}

.social__link:hover path {
  transition: 0.3s;
  stroke: #005640;
}

.header {
  position: relative;
  padding-top: 37px;
  min-height: 178px;
  background-color: #1e1e1e;
  box-shadow: 0px 7px 15px 0px rgba(175, 175, 175, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.header__top {
  padding: 0 37px;
  position: relative;
}
.header__nav {
  max-width: 1277px;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 33px;
  position: relative;
}
.header .logo {
  margin: 0 auto;
}
.header__sub {
  margin-top: 35px;
  position: relative;
}
.header__sub-items {
  margin: 0 auto;
  padding: 0 37px;
  max-width: 1147px;
  display: flex;
  justify-content: space-between;
}
.header__sub-item {
  position: relative;
}
.header__hover-items {
  overflow: hidden;
  visibility: hidden;
  top: 34px;
  position: absolute;
  padding: 10px 20px;
  background: #363636;
}
.header__sub-item:hover .header__hover-items {
  visibility: visible;
}
.header__hover-link {
  color: #ffffff;
  font-size: 18px;
  line-height: 110%;
  display: block;
}
.header__hover-item + .header__hover-item {
  margin-top: 8px;
}
.header__sub-link {
  padding: 5px 21px 41px;
  color: #fff;
  font-size: 20px;
  line-height: 24px;
  position: relative;
  display: inline-block;
  transition: all 0.3s;
}
.header__sub-link path {
  transition: all 0.3s;
}
.header__sub-item:nth-child(2) > span, .header__sub-item:nth-child(3) > span, .header__sub-item:nth-child(4) > span, .header__sub-item:nth-child(6) > span {
  padding-right: 48px;
}
.header__sub-item:nth-child(2) > span svg, .header__sub-item:nth-child(3) > span svg, .header__sub-item:nth-child(4) > span svg, .header__sub-item:nth-child(6) > span svg {
  position: absolute;
  right: 19px;
  top: 11px;
}

.search {
  opacity: 0;
  visibility: hidden;
  transition: 0.3s;
  padding: 20px 35px;
  z-index: 1;
  position: absolute;
  background: #363636;
  right: 0;
  bottom: 0;
  left: 0;
}
.search.active {
  opacity: 1;
  visibility: visible;
}
.search__form {
  margin: 0 auto;
  max-width: 1277px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 55px;
}
.search__type {
  width: -webkit-fill-available;
  width: -moz-available;
  width: stretch;
  display: block;
  box-sizing: border-box;
  background: transparent;
  border: none;
  color: rgba(243, 243, 243, 0.5019607843);
  font-size: 25px;
  line-height: 30px;
  outline: transparent;
}

.sidebar {
  opacity: 0;
  visibility: hidden;
  position: fixed;
  left: 0;
  right: 0;
  height: 100vh;
  z-index: 2;
  transition: 0.3s;
}
.sidebar.active {
  opacity: 1;
  visibility: visible;
}
.sidebar.active .sidebar__inner {
  left: 0;
}
.sidebar .overlay {
  width: 100%;
  height: 100%;
  background: rgba(30, 30, 30, 0.5019607843);
  position: fixed;
  z-index: -1;
}
.sidebar__inner {
  min-width: 350px;
  min-height: 100%;
  background: #fff;
  left: -350px;
  transition: all 0.3s;
  position: fixed;
  overflow: auto;
}
.sidebar__top-list {
  padding: 22px 30px 15px;
}
.sidebar__sub-list {
  margin-bottom: 10px;
}
.sidebar__top-link, .sidebar__sub-link {
  color: #000;
}
.sidebar__top-link {
  color: #000000;
  font-size: 25px;
  line-height: 30px;
}
.sidebar__top-item + .sidebar__top-item, .sidebar__sub-item {
  margin-top: 15px;
}
.sidebar__sub-item + .sidebar__sub-item, .sidebar__center-item + .sidebar__center-item {
  margin-top: 10px;
}
.sidebar__sub-link {
  color: #000000;
  font-size: 22px;
  line-height: 26px;
}
.sidebar__header {
  width: 100%;
  height: 178px;
  box-shadow: 0px 7px 15px 0px rgba(0, 0, 0, 0.25);
  background: #1e1e1e;
}
.sidebar__close {
  position: absolute;
  top: 45px;
  left: 30px;
}
.sidebar__content {
  overflow: auto;
  height: calc(100vh - 178px);
}
.sidebar__separator {
  width: 100%;
  height: 2px;
  background: #005640;
}
.sidebar__center-list {
  padding: 25px 30px;
}
.sidebar__center-link {
  font-size: 20px;
  line-height: 28px;
}
.sidebar__bottom {
  padding: 21px 30px 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
}

.social {
  display: flex;
  gap: 27px;
}

.articles {
  display: flex;
  flex-wrap: wrap;
  gap: 35px 31px;
  justify-content: space-between;
}
.articles__item {
  max-width: 336px;
  min-height: 324px;
  box-shadow: 0px 0px 15.81px 0px rgba(0, 0, 0, 0.1490196078);
  background: #ffffff;
  transition: 0.3s;
}
.articles__img {
  padding: 20px 25px;
  min-height: 163px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}
.articles__category {
  padding: 6px 15px;
  display: inline-block;
  font-size: 13px;
  line-height: 15px;
  border-radius: 30px;
  color: #545454;
  background: rgb(255, 255, 255);
  transition: 0.3s;
}
.articles__category:hover {
  color: #fff;
  background: #005640;
}
.articles__category + .articles__category {
  margin-left: 10px;
}
.articles__body {
  padding: 20px 25px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 160px;
}
.articles__title {
  transition: 0.3s;
}
.articles__body-date {
  text-align: right;
}

.breadcrumbs__list {
  display: flex;
}
.breadcrumbs__item + .breadcrumbs__item::before {
  content: "  I  ";
  font-size: 16px;
  line-height: 19px;
  color: #545454;
  left: 0;
  bottom: 0;
  white-space: pre;
}
.breadcrumbs__link {
  font-size: 16px;
  line-height: 19px;
  color: #545454;
}

.pagination__inner {
  margin: 60px auto 0 auto;
  display: flex;
  gap: 15px;
  justify-content: center;
  align-items: center;
}
.pagination__list {
  display: flex;
  gap: 10px;
  align-items: center;
}
.pagination__item {
  padding: 2px 5px;
}
.pagination__prew, .pagination__next {
  font-size: 0;
}
.pagination__prew-img, .pagination__next-img {
  vertical-align: middle;
}
.pagination__item--active {
  border-radius: 5px;
  background: rgb(0, 86, 64);
  color: #fff;
}
.pagination__link {
  color: rgb(30, 30, 30);
  font-size: 25px;
  line-height: 30px;
}
.pagination__link--active {
  color: rgb(255, 255, 255);
}

.title-inner__separator {
  margin: 0 25px;
}
.title-inner__descr {
  display: inline-block;
  line-height: 140%;
  text-align: left;
  font-size: 20px;
}

.separator {
  width: 0;
  height: 42px;
  border: 1px solid #005640;
  display: inline-block;
}

.date {
  color: #404040;
  font-size: 15px;
  line-height: 18px;
}

.footer__info {
  padding: 65px 0 60px 0;
  background: #363636;
}
.footer__columns {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 25px;
}
.footer__column:nth-child(1) {
  max-width: 190px;
}
.footer__column:nth-child(2) {
  max-width: 252px;
}
.footer__column:nth-child(3) {
  max-width: 321px;
}
.footer__column:nth-child(4) {
  max-width: 162px;
  padding-right: 21px;
}
.footer__title {
  color: #fff;
  font-size: 13px;
  line-height: 16px;
}
.footer__menu {
  padding-top: 25px;
}
.footer__item {
  padding: 5px 0 5px 18px;
  position: relative;
}
.footer__item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 9px;
  height: 50%;
  border-bottom: 1px solid #D2D2D2;
  border-left: 1px solid #D2D2D2;
}
.footer__item:nth-child(1):before {
  top: 5px;
  height: 40%;
}
.footer__item:not(:last-child)::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 60%;
  border-left: 1px solid #D2D2D2;
}
.footer__link {
  font-size: 14px;
  line-height: 120%;
  color: #fff;
}
.footer__item--social::before {
  display: none;
}
.footer__item--social::after {
  display: none;
}
.footer__link--desktop {
  display: inline;
}
.footer__link--mobile {
  display: none;
}
.footer__link--social {
  position: relative;
  padding-left: 11px;
}
.footer__icon {
  position: absolute;
  left: -8px;
  bottom: 0;
  transform: translate(-50%, 0);
}
.footer__copy {
  background: #1E1E1E;
  padding: 17px 0 25px;
}
.footer__copy-text {
  color: #CFCFCF;
  font-family: Montserrat, sans-serif;
  font-weight: 275;
  font-style: normal;
  font-size: 14px;
  line-height: 27px;
}

.category-page {
  padding: 46px 0 80px;
}
.category-page__title-inner {
  margin-top: 10px;
}
.category-page__articles {
  margin-top: 40px;
}
.category-page__form {
  margin-top: 39px;
}
.category-page .categories__link {
  padding: 0 30px;
}

@media screen and (max-width: 1200px) {
  .locked {
    overflow: hidden;
  }
  .header {
    min-height: auto;
    padding: 18px 35px 19px;
    box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.25);
  }
  .header__top {
    padding: 0;
  }
  .header .burger-btn svg {
    width: 30px;
    height: 17px;
  }
  .header .search-btn svg {
    width: 23px;
    height: 23px;
  }
  .header .logo__img {
    width: 100px;
  }
  .header .top-btn, .header__sub {
    display: none;
  }
  .header .search {
    padding: 16px 35px 20px;
    bottom: -60px;
  }
  .header .search .search-btn {
    display: none;
  }
  .header .search .close {
    width: 20px;
    height: 20px;
  }
  .header .search__type {
    font-size: 20px;
    line-height: 24px;
    max-width: calc(100% - 30px);
  }
  .header .search__form {
    max-width: 1277px;
    gap: 10px;
  }
  .burger-btn {
    width: 30px;
    height: 17px;
  }
  .burger-btn.active::before, .burger-btn.active::after {
    content: "";
    top: 50%;
    transform: translate(0, -50%);
  }
  .burger-btn.active::before {
    transform: rotate(45deg);
  }
  .burger-btn.active::after {
    transform: rotate(-45deg);
  }
  .burger-btn.active span {
    opacity: 0;
  }
  .sidebar {
    top: 60px;
    left: -100%;
  }
  .sidebar__top-list {
    padding-top: 25px;
  }
  .sidebar__header {
    display: none;
  }
  .sidebar__close {
    top: 18px;
    left: 35px;
  }
  .sidebar__inner {
    height: calc(100vh - 60px);
    width: 100%;
  }
  .sidebar__content {
    padding-bottom: 48px;
    height: calc(100vh - 60px);
  }
  .sidebar__bottom {
    padding-bottom: 0;
  }
  .sidebar__btn-separator {
    display: block;
  }
  .sidebar__goto {
    display: none;
  }
  .footer__info {
    padding: 20px 0 31px;
  }
  .footer__columns {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px 15px;
  }
  .footer__column:nth-child(2) {
    grid-column: 1/2;
    grid-row: 2/3;
  }
  .footer__column:nth-child(3) {
    grid-column: 2/3;
    grid-row: 1/3;
  }
  .footer__column:nth-child(4) {
    grid-column: 1/-1;
    padding-right: 0;
    max-width: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;
  }
  .footer__link--desktop {
    display: none;
  }
  .footer__link--mobile {
    display: inline;
  }
  .footer__menu--social {
    margin-top: 5px;
    min-width: 70px;
    display: flex;
    justify-content: space-between;
  }
  .footer__item--social {
    padding: 0;
  }
  .footer__link--social {
    position: static;
    padding: 0;
  }
  .footer__icon {
    position: static;
  }
  .footer__link--social span {
    display: none;
  }
  .footer__menu {
    padding-top: 0;
  }
  .footer__copy {
    padding: 19px 0;
  }
  .footer__copy-text {
    font-size: 10px;
    font-weight: 300;
    line-height: 140%;
  }
  .media {
    padding: 30px 0 20px;
  }
  .media__choise {
    margin-top: 15px;
    font-size: 16px;
  }
  .media__articles {
    margin-top: 5px;
  }
  .media .articles__item:nth-child(1) {
    display: none;
  }
  .title-inner {
    display: flex;
    flex-direction: column;
  }
  .title-inner h1 {
    font-size: 26px;
    line-height: 32px;
  }
  .title-inner__separator {
    margin: 10px 0 0;
    order: 1;
  }
  .title-inner__descr {
    margin-top: 5px;
    font-size: 16px;
  }
  .separator {
    width: 100%;
    height: 0;
  }
  .articles {
    flex-direction: column;
    gap: 20px 15px;
    font-weight: 600;
  }
  .articles__item {
    max-width: 100%;
    min-height: 296px;
  }
  .articles__img {
    padding: 15px 20px;
    min-height: 160px;
  }
  .articles__category {
    padding: 3px 13px;
    font-size: 13px;
    line-height: 14px;
  }
  .articles__body {
    min-height: 136px;
    padding: 15px 20px 20px;
  }
  .articles__body-date {
    margin-top: 21px;
  }
  .articles__title {
    line-height: 120%;
  }
  .date {
    font-size: 12px;
    line-height: 14px;
  }
  .more-btn {
    margin-top: 20px;
    padding-right: 36px;
    font-size: 14px;
    line-height: 17px;
  }
  .more-btn svg:first-child {
    display: none;
  }
  .more-btn svg:last-child {
    display: block;
  }
  .more-btn svg {
    bottom: 4px;
  }
  .more-btn__title {
    font-size: 18px;
    line-height: 120%;
  }
  .another-article {
    padding-bottom: 20px;
  }
  .another-article__articles {
    margin-top: 20px;
  }
  .article {
    padding: 20px 0;
  }
  .article .articles__item:nth-child(n+4) {
    display: none;
  }
  .read-social {
    margin-top: 20px;
    max-width: 100%;
    gap: 8px;
    align-items: flex-start;
  }
  .read-social__text {
    font-size: 20px;
    line-height: 24px;
  }
  .read-social__icon {
    width: 25px;
    height: 25px;
  }
  .cases {
    padding: 20px 0;
  }
  .cases .articles {
    margin-top: 15px;
  }
  h2 {
    font-size: 24px;
    line-height: 29px;
  }
  .by-direction,
  .descr-media,
  .read {
    display: none;
  }
  .more-news {
    padding: 15px 0;
  }
  .more-news__items {
    flex-direction: column;
  }
  .more-news__item {
    transition: all 0.3s ease;
    max-width: 100%;
    /* Плавна зміна границі при наведенні та забиранні курсору */
  }
  .more-news__title {
    font-size: 18px;
    line-height: 120%;
  }
  .more-news__item:last-child {
    display: none;
  }
  .post__content h1 {
    font-size: 20px;
    line-height: 24px;
    margin-top: 13px;
    margin-bottom: 10px;
  }
  .post__content hr {
    margin: 15px 0;
  }
  .post__content img {
    margin-bottom: 15px;
    display: block;
  }
  .post__content h4 {
    margin-bottom: 10px;
    font-size: 16px;
    line-height: 20px;
  }
  .post__content ul {
    margin-bottom: 15px;
  }
  .post__content ul li {
    padding-left: 22px;
  }
  .post__content ul li::before {
    left: 0;
  }
  .post__content p {
    margin-bottom: 10px;
  }
  .post__content h3 {
    font-size: 16px;
    line-height: 20px;
  }
  .post__content figcaption {
    font-size: 12px;
    line-height: 14px;
    margin: 7px 0 20px;
  }
  .post__content ol li {
    padding-left: 20px;
  }
  .post__content ol li + li {
    margin-top: 22px;
  }
  .post__content div {
    padding: 15px 10px;
    margin-bottom: 20px;
  }
  .post__content blockquote {
    margin: 31px 0 36px;
    padding: 26px 10px;
  }
  .post__content blockquote::before,
  .post__content blockquote::after {
    width: 38px;
    height: 34px;
  }
  .post__content blockquote::before {
    top: -16px;
    left: 4px;
  }
  .post__content blockquote::after {
    right: 4px;
    bottom: -16px;
  }
  .post__author-link {
    display: none;
  }
  .post__author {
    justify-content: space-between;
  }
  .post__author span {
    display: none;
  }
  .post__author-breadcrumbs {
    order: -1;
    margin-left: 0;
  }
  .post .left-border {
    display: none;
  }
  .columns {
    margin: 0 auto;
    padding-top: 40px;
  }
  .columns__main > .separator {
    display: block;
  }
  .columns__aside {
    display: none;
  }
  .card {
    margin-top: 25px;
    padding: 30px 20px;
    box-shadow: 0px 0px 9.88px 0px rgba(0, 0, 0, 0.2509803922);
    background: #ffffff;
    margin-bottom: 30px;
  }
  .card .title-inner {
    display: none;
  }
  .card__about {
    margin-top: 0;
    gap: 10px;
    justify-content: space-between;
  }
  .card__info {
    order: -1;
  }
  .card__name {
    font-size: 24px;
    line-height: 29px;
    font-family: Montserrat, sans-serif;
    font-weight: 700;
    display: block;
  }
  .card__name::after {
    display: none;
  }
  .card__position {
    font-size: 14px;
    line-height: 17%;
  }
  .card__departament {
    display: none;
  }
  .card__social {
    margin-top: 20px;
    max-width: 62px;
    gap: 5px;
  }
  .card__social-link svg {
    width: 14px;
    height: 14px;
  }
  .card__descr {
    margin-top: 25px;
  }
  .card__text {
    font-size: 16px;
    line-height: 22.4px;
    margin-bottom: 20px;
  }
  .card .categories {
    gap: 10px;
    justify-content: start;
  }
  .card .categories__link {
    font-size: 12px;
    line-height: 14px;
    padding: 0 20px;
    height: 24px;
  }
  .card .social {
    display: flex;
  }
  .breadcrumbs__item + .breadcrumbs__item::before {
    content: "  I  ";
    font-size: 12px;
    line-height: 14px;
  }
  .breadcrumbs__link {
    font-size: 12px;
    line-height: 14px;
  }
  .more-slider {
    padding-bottom: 15px;
  }
  .more-slider .container {
    padding: 0;
  }
  .more-slider__inner {
    margin-top: 10px;
  }
  .more-slider__articles {
    margin-top: 0;
    margin-left: -17px;
    margin-right: -17px;
  }
  .more-slider .slick-arrow {
    display: none;
  }
  .category-page .categories {
    display: none;
  }
  .category-page__articles {
    margin-top: 20px;
  }
  .pagination__inner {
    margin-top: 20px;
    gap: 12px;
  }
  .pagination__list {
    gap: 12px;
  }
  .pagination__link {
    font-size: 16px;
    line-height: 20px;
  }
  .pagination__prew-img, .pagination__next-img {
    width: 9px;
    height: 18px;
  }
  .subcategory-page .categories {
    display: none;
  }
  .subcategory-page__articles {
    margin-top: 15px;
  }
  .main .categories {
    display: none;
  }
  .author-page__photo {
    width: 85px;
    height: 85px;
    border-radius: 50%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
